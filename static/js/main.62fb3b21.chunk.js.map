{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","hooks/useLocalStorage.js","App.js","index.js","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","type","setState","value","handleSubmit","preventDefault","props","onSubmit","this","className","style","label","pattern","title","required","onChange","input","button","Component","Filter","styles","ContactList","contacts","onDeleteContact","contactList","map","id","item","description","onClick","useLocalStorage","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","useEffect","setItem","stringify","App","setContacts","filter","setFilter","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","alert","uuidv4","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62fb3b21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__2alPh\",\"input\":\"ContactForm_input__21F8Q\",\"button\":\"ContactForm_button__1STi5\"};","import { Component } from 'react';\n\nimport style from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    if (e.currentTarget.type === 'text') {\n      this.setState({ name: e.currentTarget.value });\n    }\n    if (e.currentTarget.type === 'tel') {\n      this.setState({ number: e.currentTarget.value });\n    }\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.name, this.state.number);\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label className={style.label}>\n          Name\n          <input\n            value={this.state.name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n            className={style.input}\n          />\n        </label>\n        <label className={style.label}>\n          Number\n          <input\n            value={this.state.number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n            className={style.input}\n          />\n        </label>\n        <button type=\"submit\" className={style.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.label}>\n    Find by name\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      className={styles.input}\n    ></input>\n  </label>\n);\n\nexport default Filter;\n","import styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={styles.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.item}>\n          <p className={styles.description}>\n            {name}: {number}\n          </p>\n          <button\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n            className={styles.button}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useState, useEffect } from 'react';\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n","import { v4 as uuidv4 } from 'uuid';\n\nimport ContactForm from './Components/ContactForm/';\nimport Filter from './Components/Filter/Filter';\nimport ContactList from './Components/ContactList';\nimport useLocalStorage from './hooks/useLocalStorage';\n\nexport default function App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useLocalStorage('filter', '');\n\n  const addContact = (name, number) => {\n    const arrayName = contacts.map(contact => {\n      return contact.name;\n    });\n\n    if (arrayName.includes(name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const contact = {\n      name,\n      id: uuidv4(),\n      number,\n    };\n\n    setContacts([contact, ...contacts]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList contacts={visibleContacts} onDeleteContact={deleteContact} />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__8gSv0\",\"item\":\"ContactList_item__ImyAc\",\"description\":\"ContactList_description__zdgSH\",\"button\":\"ContactList_button__IqeCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1wKzd\",\"label\":\"Filter_label__2E7qL\"};"],"sourceRoot":""}